{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"qu",
				"queueFlags"
			],
			[
				"que",
				"queueFamily"
			],
			[
				"Qu",
				"QueueFlagBits"
			],
			[
				"Shader",
				"ShaderStageFlagBits"
			],
			[
				"_com",
				"_compute"
			],
			[
				"_co",
				"_commandBuffer"
			],
			[
				"add",
				"addShader"
			],
			[
				"base",
				"baseRP\tauto baseRP"
			],
			[
				"setSc",
				"setScissor\tvoid setScissor(uint32_t firstScissor, ArrayProxy<const vk::Rect2D> scissors) const"
			],
			[
				"e",
				"eMax\tvk::BlendOp eMax"
			],
			[
				"eR8G8B8A8",
				"eR8G8B8A8Unorm\tvk::Format eR8G8B8A8Unorm"
			],
			[
				"eR8G",
				"eR8G8B8Unorm\tvk::Format eR8G8B8Unorm"
			],
			[
				"eUint",
				"eUint16\tvk::IndexType eUint16"
			],
			[
				"gui",
				"guiVertex\tguiVertex"
			],
			[
				"uint",
				"uint32_t\tuint32_t"
			],
			[
				"el",
				"elem_count\tunsigned int elem_count"
			],
			[
				"_fb",
				"_fbView\tvk::ImageView _fbView"
			],
			[
				"_de",
				"_descSet"
			],
			[
				"or",
				"orthoUniform\tr267::Uniform orthoUniform"
			],
			[
				"_gpb",
				"_gpuVB"
			],
			[
				"Com",
				"CommandBuffer\tCommandBuffer"
			],
			[
				"MAX",
				"MAX_ELEMENT_BUFFER_GUI"
			],
			[
				"Ext",
				"Extent2D\tExtent2D"
			],
			[
				"create",
				"createImageView\tvk::ImageView createImageView(vk::Device device, vk::Image image, vk::Format format, vk::ImageAspectFlags aspectFlags)"
			],
			[
				"eR32G32S",
				"eR32G32Sfloat\tvk::Format eR32G32Sfloat"
			],
			[
				"eR8G8B8",
				"eR8G8B8Uint\tvk::Format eR8G8B8Uint"
			],
			[
				"mi",
				"mipmapLevel"
			],
			[
				"ligh",
				"lightColor"
			],
			[
				"tex",
				"texSize"
			],
			[
				"li",
				"lightPower"
			],
			[
				"di",
				"diffuseTexture"
			],
			[
				"no",
				"normal"
			],
			[
				"al",
				"alpha2"
			],
			[
				"_c",
				"_camera"
			],
			[
				"si",
				"sizes"
			],
			[
				"wi",
				"width"
			],
			[
				"mip",
				"mipLevels"
			],
			[
				"pi",
				"pixels"
			],
			[
				"_sc",
				"_scene"
			],
			[
				"_di",
				"_diffTexture"
			],
			[
				"_d",
				"_diffuseFilename"
			],
			[
				"Mat",
				"MaterialUBO"
			],
			[
				"desc",
				"descLayouts"
			],
			[
				"des",
				"descSets"
			],
			[
				"spD",
				"spDescSet"
			],
			[
				"_su",
				"_subPassDep"
			],
			[
				"_r",
				"_renderPassInfo"
			],
			[
				"_dep",
				"_depthAttachment"
			],
			[
				"_depth",
				"_depthAttachmentRef"
			],
			[
				"dep",
				"depthFormat"
			],
			[
				"mo",
				"models"
			],
			[
				"in",
				"inPosition"
			],
			[
				"name",
				"namespace"
			],
			[
				"nam",
				"namespace"
			],
			[
				"sce",
				"scene_filename"
			],
			[
				"_mv",
				"_mvpData"
			],
			[
				"out",
				"output"
			],
			[
				"arg",
				"argv"
			],
			[
				"mai",
				"main\tmain()"
			],
			[
				"inde",
				"indexes"
			],
			[
				"size",
				"size_t"
			],
			[
				"ind",
				"indexes"
			],
			[
				"s_m",
				"s_material"
			],
			[
				"set",
				"setData"
			],
			[
				"s_",
				"s_mesh"
			],
			[
				"ver",
				"vertexes"
			],
			[
				"spM",
				"spMaterial"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"fil",
				"filesystem"
			],
			[
				"pack",
				"pack_size"
			],
			[
				"R",
				"R267Mesh"
			],
			[
				"ui",
				"uint8_t"
			],
			[
				"sp",
				"specularColor"
			],
			[
				"dif",
				"diffuseColor"
			],
			[
				"diff",
				"diffuseColor"
			],
			[
				"ro",
				"roughness"
			],
			[
				"ex",
				"exception"
			],
			[
				"get_",
				"get_child"
			],
			[
				"Ma",
				"MaterialUBO"
			],
			[
				"pro",
				"property_tree"
			],
			[
				"ot",
				"other-"
			],
			[
				"cre",
				"createCubeIB"
			],
			[
				"createV",
				"createCubeVB"
			],
			[
				"na",
				"name_size"
			],
			[
				"siz",
				"sizeof"
			],
			[
				"T",
				"TypeDesc"
			],
			[
				"pix",
				"pixels"
			],
			[
				"_ima",
				"_imageView"
			],
			[
				"_im",
				"_imageView"
			],
			[
				"comb",
				"_commandBuffers"
			],
			[
				"_desc",
				"_descPool"
			],
			[
				"_sha",
				"_shaderModules"
			],
			[
				"funct",
				"functor\tFunctor"
			],
			[
				"bin",
				"binding"
			],
			[
				"po",
				"poolSizes"
			],
			[
				"layo",
				"layoutBinds"
			],
			[
				"Sam",
				"SamplerBinding"
			],
			[
				"Sa",
				"SamplerCreateInfo"
			],
			[
				"_image",
				"_imageFormat"
			],
			[
				"make",
				"make_vec2f"
			],
			[
				"wS",
				"wSize"
			],
			[
				"program",
				"programCount"
			],
			[
				"MAX_",
				"MAX_EDGES_ID"
			],
			[
				"m",
				"make_vec3f"
			],
			[
				"mak",
				"make_vec3f"
			],
			[
				"Mem",
				"Memory"
			],
			[
				"Memr",
				"MemoryLevels"
			],
			[
				"whi",
				"whittedLevel"
			],
			[
				"currN",
				"currNormalData"
			],
			[
				"clear",
				"clear_WhittedLevel"
			],
			[
				"Wh",
				"WhittedLevel"
			],
			[
				"make_",
				"make_vec4f"
			],
			[
				"light",
				"lightColor"
			],
			[
				"resu",
				"resultPos"
			],
			[
				"isM",
				"isMotionCamera"
			],
			[
				"_comm",
				"_commandPool"
			],
			[
				"_render",
				"_renderPass"
			],
			[
				"Re",
				"RenderPass"
			],
			[
				"off",
				"yOffset"
			],
			[
				"_bl",
				"_blend"
			],
			[
				"RenderP",
				"RenderPattern"
			],
			[
				"itse",
				"interpSize"
			],
			[
				"inf",
				"invF"
			],
			[
				"frameT",
				"frameTriangles"
			],
			[
				"tri",
				"tri_id0"
			],
			[
				"prevC",
				"prevColor"
			],
			[
				"frame",
				"frameInterp"
			],
			[
				"TILE",
				"TILE_SIZE_DRAW"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/base/wnd/BaseApp.hpp",
			"settings":
			{
				"buffer_size": 751,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "examples/compute/main.cpp",
			"settings":
			{
				"buffer_size": 5301,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/base/vk/image.cpp",
			"settings":
			{
				"buffer_size": 5783,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 1258,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/assets/compute/main.frag",
			"settings":
			{
				"buffer_size": 246,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/assets/compute/main.comp",
			"settings":
			{
				"buffer_size": 207,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/mnt/3BE8E03719E494B4/linuxBackUP/staff/workspace/wtracer/bin/shaders/raytracing/boxes.cs",
			"settings":
			{
				"buffer_size": 4502,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/compute/compute.hpp",
			"settings":
			{
				"buffer_size": 918,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/compute/compute.cpp",
			"settings":
			{
				"buffer_size": 2024,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/base/vk/device.hpp",
			"settings":
			{
				"buffer_size": 2087,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/base/vk/device.cpp",
			"settings":
			{
				"buffer_size": 5718,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/base/vk/pipeline.cpp",
			"settings":
			{
				"buffer_size": 10571,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/base/vk/pipeline.hpp",
			"settings":
			{
				"buffer_size": 5749,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/include/vulkan/vulkan.hpp",
			"settings":
			{
				"buffer_size": 908602,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/base/vk/image.hpp",
			"settings":
			{
				"buffer_size": 1371,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/base/vk/utils.hpp",
			"settings":
			{
				"buffer_size": 1755,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/base/vk/utils.cpp",
			"settings":
			{
				"buffer_size": 4612,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "r267 (Linux)",
	"build_system_choices":
	[
		[
			[
				[
					"r267 (Linux)",
					""
				],
				[
					"r267 (Linux)",
					"clean"
				],
				[
					"r267 (Linux)",
					"rebuild_cache"
				],
				[
					"r267 (Linux)",
					"r267"
				],
				[
					"r267 (Linux)",
					"shader_quad_main_frag"
				],
				[
					"r267 (Linux)",
					"triangle"
				],
				[
					"r267 (Linux)",
					"shader_triangle_main_vert"
				],
				[
					"r267 (Linux)",
					"shader_triangle_main_frag"
				],
				[
					"r267 (Linux)",
					"quad"
				],
				[
					"r267 (Linux)",
					"shader_quad_main_vert"
				]
			],
			[
				"r267 (Linux)",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 96.0,
		"last_filter": "Remove",
		"selected_items":
		[
			[
				"Remove",
				"Package Control: Remove Package"
			],
			[
				"Ea",
				"EasyClangComplete: Clean current CMake cache"
			],
			[
				"Menu",
				"View: Toggle Menu"
			],
			[
				"Configur",
				"CMakeBuilder: Configure"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"git add",
				"Git: Quick Add"
			],
			[
				"git c",
				"Git: Commit"
			],
			[
				"git q",
				"Git: Quick Add"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git ",
				"Git: Quick Add"
			],
			[
				"gdb",
				"SublimeGDB: Start Debugging"
			],
			[
				"git qa",
				"Git: Quick Add"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"git a",
				"Git: Quick Add"
			],
			[
				"men",
				"View: Toggle Menu"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"In",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"Insta",
				"Package Control: Install Package"
			],
			[
				"Instal",
				"Package Control: Install Package"
			],
			[
				"Git",
				"Git: Diff"
			],
			[
				"Inst",
				"Package Control: Install Package"
			],
			[
				"togle m",
				"View: Toggle Menu"
			],
			[
				"Git Add",
				"Git: Quick Add"
			],
			[
				"Add",
				"Git: Quick Add"
			],
			[
				"Git:",
				"Git: Commit"
			],
			[
				"Git: Add",
				"Git: Quick Add"
			],
			[
				"Gdb",
				"Preferences: SublimeGDB Settings – User"
			],
			[
				"Git: C",
				"Git: Commit"
			],
			[
				"Git: Commit",
				"Git: Commit"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"Git co",
				"Git: Commit"
			],
			[
				"Git: Co",
				"Git: Commit"
			],
			[
				"Packa",
				"Package Control: Install Package"
			],
			[
				"GLSL",
				"Set Syntax: GLSL"
			],
			[
				"Remo",
				"Package Control: Remove Package"
			],
			[
				"Package Control: I",
				"Package Control: Install Package"
			],
			[
				"Pak",
				"Preferences: Browse Packages"
			],
			[
				"",
				"About"
			]
		],
		"width": 349.0
	},
	"console":
	{
		"height": 297.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/kurono267/workspace/r267",
		"/home/kurono267/workspace/r267/bin",
		"/home/kurono267/workspace/r267/bin/assets",
		"/home/kurono267/workspace/r267/bin/assets/compute",
		"/home/kurono267/workspace/r267/examples",
		"/home/kurono267/workspace/r267/examples/compute",
		"/home/kurono267/workspace/r267/examples/mesh",
		"/home/kurono267/workspace/r267/src",
		"/home/kurono267/workspace/r267/src/base",
		"/home/kurono267/workspace/r267/src/base/wnd",
		"/home/kurono267/workspace/lgl"
	],
	"file_history":
	[
		"/home/kurono267/workspace/r267/examples/bvh/main.cpp",
		"/home/kurono267/workspace/r267/examples/gui/main.cpp",
		"/home/kurono267/workspace/r267/src/base/gui/gui.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/pipeline.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/image.hpp",
		"/home/kurono267/workspace/r267/bin/assets/gui/main.vert",
		"/home/kurono267/workspace/r267/bin/assets/gui/main.frag",
		"/home/kurono267/workspace/r267/bin/assets/gui/render.frag",
		"/home/kurono267/workspace/r267/examples/CMakeLists.txt",
		"/home/kurono267/workspace/r267/examples/quad/main.cpp",
		"/home/kurono267/workspace/r267/bin/assets/gui/render_frag.spv",
		"/home/kurono267/workspace/r267/src/base/scene/mesh.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/buffer.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/buffer.cpp",
		"/usr/include/vulkan/vulkan.hpp",
		"/home/kurono267/workspace/r267/examples/texture/main.cpp",
		"/home/kurono267/workspace/r267/src/base/gui/gui.hpp",
		"/home/kurono267/workspace/r267/src/CMakeLists.txt",
		"/home/kurono267/workspace/r267/CMakeLists.txt",
		"/home/kurono267/builds/nuklear/demo/glfw_opengl3/main.c",
		"/home/kurono267/builds/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h",
		"/home/kurono267/workspace/r267/external/include/nuklear.h",
		"/home/kurono267/workspace/r267/r267.sublime-project",
		"/home/kurono267/workspace/r267/bin/assets/mesh/main.frag",
		"/home/kurono267/workspace/r267/src/base/vk/pipeline.cpp",
		"/home/kurono267/workspace/r267/bin/assets/mesh/main.vert",
		"/home/kurono267/workspace/r267/examples/mesh/main.cpp",
		"/home/kurono267/workspace/r267/src/base/scene/material.hpp",
		"/home/kurono267/workspace/r267/src/base/scene/material.cpp",
		"/home/kurono267/workspace/r267/src/base/scene/scene.cpp",
		"/home/kurono267/workspace/r267/examples/converter/main.cpp",
		"/home/kurono267/workspace/r267/src/base/scene/model.hpp",
		"/home/kurono267/workspace/r267/src/base/scene/model.cpp",
		"/home/kurono267/workspace/r267/src/base/scene/scene.hpp",
		"/home/kurono267/workspace/r267/bin/assets/triangle/main.vert",
		"/home/kurono267/workspace/r267/bin/assets/quad/main_frag.spv",
		"/home/kurono267/workspace/r267/bin/assets/triangle/main.frag",
		"/home/kurono267/workspace/r267/src/base/vk/utils.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/utils.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/additional.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/additional.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/device.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/device.cpp",
		"/home/kurono267/workspace/r267/src/base/wnd/MainApp.cpp",
		"/home/kurono267/workspace/r267/src/base/wnd/MainApp.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/framebuffer.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/framebuffer.cpp",
		"/home/kurono267/workspace/r267/examples/triangle/main.cpp",
		"/home/kurono267/VulkanSDK/Vulkan-master/scenerendering/scenerendering.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/image.cpp",
		"/home/kurono267/workspace/lgl/src/examples/viewer/ViewerApp.cpp",
		"/home/kurono267/workspace/lgl/src/examples/viewer/ViewerApp.hpp",
		"/home/kurono267/workspace/r267/src/base/scene/camera.hpp",
		"/home/kurono267/workspace/r267/src/base/scene/camera.cpp",
		"/home/kurono267/workspace/r267/README",
		"/home/kurono267/workspace/r267/bin/assets/texture/main.frag",
		"/home/kurono267/workspace/r267/bin/assets/quad/main.vert",
		"/home/kurono267/workspace/r267/bin/assets/quad/main.frag",
		"/home/kurono267/workspace/r267/src/base/vk/swapchain.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/shape.cpp",
		"/home/kurono267/workspace/lgl/src/lgl/ogl/Export.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/instance.cpp",
		"/home/kurono267/workspace/r267/src/base/scene/mesh.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/shape.hpp",
		"/home/kurono267/workspace/r267/src/base/scene/format.hpp",
		"/home/kurono267/workspace/r267/bin/assets/models/test_out.json",
		"/home/kurono267/workspace/r267/bin/assets/models/test.json",
		"/home/kurono267/workspace/r267/src/base/scene/Model.hpp",
		"/home/kurono267/workspace/r267/src/base/default.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/uniform.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/swapchain.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/uniform.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/texture.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/texture.hpp",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/quad.ispc",
		"/home/kurono267/workspace/r267/src/base/wnd/BaseApp.hpp",
		"/home/kurono267/workspace/vrt/src/basic/BasicApp.cpp",
		"/home/kurono267/workspace/r267/src/base/vk/instance.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/Instance.hpp",
		"/home/kurono267/workspace/r267/src/base/vk/Instance.cpp",
		"/home/kurono267/workspace/r267/src/base/Instance.hpp",
		"/home/kurono267/workspace/r267/src/base/BaseApp.hpp",
		"/home/kurono267/workspace/r267/src/base/MainApp.cpp",
		"/home/kurono267/workspace/r267/src/base/MainApp.hpp",
		"/home/kurono267/workspace/r267/.gitignore",
		"/home/kurono267/workspace/r267/include/base/MainApp.cpp",
		"/home/kurono267/workspace/r267/include/base/MainApp.hpp",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/mlt.isph",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/mlt.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/quadrender.isph",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/textures/image3fa.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/textures/image3f.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/pathtracer.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/textures/image3ca.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/textures/image3c.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/textures/image.isph",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/quadrender.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/frameinterp.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/whitted.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/quad.isph",
		"/home/kurono267/workspace/lgl/src/examples/CMakeLists.txt",
		"/home/kurono267/workspace/lgl/src/lgl/App/MainApp.cpp",
		"/home/kurono267/workspace/lgl/src/lgl/ogl/Texture.cpp",
		"/home/kurono267/workspace/lgl/src/lgl/ogl/Import.cpp",
		"/home/kurono267/workspace/lgl/src/examples/cpu/CPUApp.hpp",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/photonmapping.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/api/ispc_device.cpp",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/textures/trilinear.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/triangle.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/quad/raytracing.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/renderer/RenderPlugin.cpp",
		"/mnt/instance/code/embree-plugin-git/devices/renderer/IRenderPlugin.h",
		"/mnt/instance/code/embree-plugin-git/common/math/quaternion.h",
		"/mnt/instance/code/embree-plugin-git/common/math/vec3.h",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/renderer.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/renderers/renderer.isph",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/api/ispc_device.h",
		"/mnt/instance/code/embree-plugin-git/devices/device/device.h",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/tonemappers/defaulttonemapper.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/scene/scene.isph",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/shapes/trianglemesh.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/shapes/shape.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/shapes/shape.isph",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/scene/scene.ispc",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/api/data.h",
		"/mnt/instance/code/embree-plugin-git/devices/device_ispc/cameras/camera.isph",
		"/home/kurono267/workspace/embree-BDPT/devices/device_ispc/cameras/camera.ispc",
		"/home/kurono267/workspace/embree-BDPT/devices/device_ispc/renderers/quad/quadrender.ispc"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 82.0,
		"where_history":
		[
			"/home/kurono267/workspace/r267/src",
			"/mnt/instance/code/embree-plugin-git/common/math",
			"/home/kurono267/workspace/embree-BDPT/devices/device_ispc",
			"/home/kurono267/workspace/embree-BDPT/devices",
			"/home/kurono267/workspace/embree-BDPT",
			"/mnt/instance/code/embree-plugin-git/devices",
			"/home/kurono267/builds/Phoenix",
			"/home/kurono267/builds/Phoenix_FirestormOS-private-pathtracer1_x86_64_4.7.6.0",
			"/mnt/instance/code/phoenix-firestorm-release",
			"/mnt/instance/code/embree-plugin-0812",
			"/mnt/instance/code/phoenix-firestorm-release",
			"/home/kurono267/workspace/embree-plugin",
			"/home/kurono267/workspace/embree-BDPT",
			"/home/kurono267/workspace/embree-plugin-161124/embree-plugin",
			"/home/kurono267/workspace/embree-plugin-161124/embree-plugin/devices",
			"/home/kurono267/workspace/embree-plugin-161124/embree-plugin",
			"/home/kurono267/workspace/embree-BDPT",
			"/home/kurono267/workspace/embree-plugin-161124/embree-plugin/devices/device_ispc",
			"/home/kurono267/workspace/embree-BDPT",
			"/home/kurono267/workspace/2811/phoenix-firestorm-release/indra",
			"/home/kurono267/workspace/2811/phoenix-firestorm-release",
			"/home/kurono267/workspace/2811/phoenix-firestorm-release/indra",
			"/home/kurono267/workspace/embree-BDPT/devices",
			"/home/kurono267/Загрузки/Goblin-master/Source",
			"/home/kurono267/workspace/embree-27SR",
			"/home/kurono267/builds/glfw",
			"/mnt/3BE8E03719E494B4/EmbreeWork/0412/embree-27/embree-2.7.0",
			"/home/kurono267/workspace/embree-27SR",
			"/mnt/3BE8E03719E494B4/EmbreeWork/0412/embree-27/embree-2.7.0",
			"/home/kurono267/workspace/embree-27SR",
			"/mnt/3BE8E03719E494B4/EmbreeWork/0412/embree-27/embree-2.7.0",
			"/home/kurono267/workspace/embree-27SR",
			"/home/kurono267/workspace/embree-27SR/devices/device_singleray",
			"/home/kurono267/workspace/embree-27SR",
			"/mnt/3BE8E03719E494B4/EmbreeWork/0412/embree-27/embree-2.7.0",
			"/home/kurono267/workspace/embree-27SR",
			"/home/kurono267/workspace/embree-27SR/devices",
			"/home/kurono267/workspace/embree-27SR/devices/device_ispc",
			"/home/kurono267/workspace/embree-27SR/devices/device_singleray",
			"/home/kurono267/workspace/embree-27SR",
			"/mnt/3BE8E03719E494B4/EmbreeWork/0412/embree-27/embree-2.7.0",
			"/home/kurono267/workspace/embree-27SR/devices/device_ispc",
			"/home/kurono267/workspace/embree-27SR",
			"/home/kurono267/workspace/embree-27/embree-renderer-2.3.2",
			"/home/kurono267/workspace/embree-whitted",
			"/mnt/3BE8E03719E494B4/Downloads2109/blender-2.73a",
			"/home/kurono267/workspace/embree-whitted",
			"/mnt/3BE8E03719E494B4/Downloads2109/blender-2.73a",
			"/home/kurono267/workspace/embree-whitted",
			"/home/kurono267/workspace/Vander-fixes/embree-hybrid-1008",
			"/home/kurono267/Загрузки/blender-2.73a",
			"/home/kurono267/workspace/embree-whitted",
			"/home/kurono267/workspace/embree-whitted/examples/renderer",
			"",
			"embree_vd"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"QueueFlagBits",
			"AccessFlagBits",
			"ImageLayout",
			"ShaderStageFlags",
			"PipelineStageFlagBits",
			"ComputePipelineCreateInfo",
			"eComputeShader",
			"ComputePipelineCreateInfo",
			"graphicsFamily",
			"DynamicState",
			"fb_scale",
			"nk_begin",
			"BufferUsageFlagBits",
			"ebo",
			"_ctx",
			"uniform_proj",
			"ProjMtx",
			"dev->null",
			"null",
			"dev",
			"cmd",
			"cmds",
			"offset",
			"nk_font_atlas",
			"MAX_VERTEX_BUFFER",
			"max_element_buffer",
			"max_vertex_buffer",
			"],\n",
			"Format",
			"nk_glfw3_font_stash_begin",
			";\n",
			"m_light",
			"transition",
			"scene",
			"_attachments",
			"_colorAttachment",
			"_framebuffers",
			"NCamera",
			"Mesh",
			"release",
			"queueFamiliesIndices",
			"ImageMemoryBarrier",
			"enum class Format",
			"Format",
			"eRGBA",
			"ImageCreateInfo",
			"ogl::",
			"threadTileDrawTriangle",
			"rtc",
			"reflect",
			"this->frame",
			"Quad",
			"quad",
			"PipelineLayoutCreateInfo",
			"pipelineLayoutInfo",
			"PipelineBindPoint",
			"_device",
			"frameCurrLevel",
			"_uniform",
			"getRequiredExtensions",
			"_surface",
			"image",
			"threadTileDrawTriangle",
			"clearFrameStatus",
			"backplate",
			"4",
			"drawSize",
			"toneMapperSize",
			"drawSize",
			"EMBREE_WIDTH",
			"numRays",
			"cStep",
			"Blend",
			"HDRI",
			"rtSetInt1",
			"EMBREE_SPP",
			"prevCamera",
			"g_camera",
			"genTriangleList",
			"QUAD__renderTile",
			"g_prevRenderTime",
			"lerp",
			"CameraData",
			"rframeID",
			"EMBREE_BUFFERS",
			"g_widths",
			"storeImage",
			"g_widths",
			"g_wi",
			"EMBREE_BUFFERS",
			"g_width",
			"g_widths",
			"g_frameBuffer",
			"g_frameBuffers",
			"frame",
			"Camera_toScreenU",
			"getSeconds",
			"avgFrames",
			"g_t0",
			"AddTe",
			"rtNewImage",
			"Shape__transform",
			"set",
			"transform",
			"PrimitiveHandle",
			"rtTransformPrimitive",
			"CreateCamera",
			"g_camera",
			"lookAtPoint",
			"lock",
			"g_device",
			"Plug_Vec3",
			"g_t0",
			"CreateCamera",
			"lerp",
			"NUM_CAMERAS",
			"MAX_SUBFRAMES",
			"p0",
			"normCamSpace",
			"inline",
			"\t\t\t\n",
			"displayMode",
			"GLUTDisplay",
			"g_render_scene",
			"lookAt",
			"Render",
			"DeInit",
			"g_renderer"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"&_ctx",
			"Camera",
			"",
			"NCamera",
			"vdata",
			"sVertex",
			"CubeApp",
			"if(isRender)return;",
			"render",
			"SSS",
			"",
			"inline",
			"wt",
			"TestRenderer",
			"NMRenderer",
			"HMRenderer",
			".ppm",
			"",
			"inline",
			"z",
			"y",
			"x",
			"WhittedRenderer",
			"HybridRenderer",
			"glm::vec2",
			"glm::vec3",
			"models",
			"spMesh",
			"glm::ivec2",
			"glm::vec2",
			"glm::vec3",
			"models",
			"glm::uint32",
			"glm::vec3f",
			"glm::vec2",
			"glm::vec3",
			"dy_pt",
			"dx_pt",
			"RTCIntersector1",
			"triC",
			"SSS",
			"embree::ComputeBSSRDF:",
			"embree::ComputeBSSRDF",
			"_dgO",
			"_dgo",
			"_sigma",
			"_dg",
			"__refract",
			"_radius",
			"image->",
			"mesh.verts[face->vertsIdx[v]]",
			"face->verts[v]->",
			"tri.verts[i]->",
			"tri.verts[v]->",
			"isfree",
			"",
			"std::vector<BoxPack>::iterator ",
			"std::vector<BoxPack>::iterator",
			"(vertarray[vertIdx])",
			"std::multimap",
			"multimap",
			"",
			"vert->",
			"vert.",
			"Triangle*",
			"Triangle",
			"::g_unwrap",
			"lightmap::g_unwrap",
			"Vec2f",
			"",
			"co",
			"ico",
			"glm::vec2",
			"TextApp",
			"ogl::Font::",
			"ogl::Font",
			"Font",
			"0.0f, 1.0f,",
			"1.0f, 0.0f,",
			"CubeApp",
			".w",
			".z",
			".y",
			".x",
			"x",
			"",
			"\\overline",
			"\\over",
			"\\sum \\limits",
			"\\sum",
			" \\to ",
			"\\in",
			"\\(\\mathcal{G}\\)",
			"\\(\\mathcal{F}\\)",
			"\\geq",
			"\\xi",
			"$\\ksi$",
			"$\\mathcal{F}$",
			"$\\mathcal{G}$",
			"\\\\in",
			"\\in",
			" \\in",
			"",
			"addWeightedGPU",
			"status",
			"_backproj_gpu",
			"object",
			"status",
			"object",
			"",
			"t2s",
			")",
			"(",
			"window",
			"select",
			"std::vector",
			"x",
			"std::pow(k",
			"_oheight*",
			"_owidth*",
			"NULL",
			"*std::pow(2/3,l)",
			"std::pow(2/3,l)",
			"*",
			"+",
			"-",
			"+",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 16,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/base/wnd/BaseApp.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 751,
						"regions":
						{
						},
						"selection":
						[
							[
								143,
								143
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "examples/compute/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5301,
						"regions":
						{
						},
						"selection":
						[
							[
								1379,
								1379
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 235.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/base/vk/image.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5783,
						"regions":
						{
						},
						"selection":
						[
							[
								2800,
								2800
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 672.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "examples/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1258,
						"regions":
						{
						},
						"selection":
						[
							[
								1257,
								1257
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/CMake/CMake.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 144.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "bin/assets/compute/main.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 246,
						"regions":
						{
						},
						"selection":
						[
							[
								141,
								141
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "bin/assets/compute/main.comp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 207,
						"regions":
						{
						},
						"selection":
						[
							[
								205,
								205
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/mnt/3BE8E03719E494B4/linuxBackUP/staff/workspace/wtracer/bin/shaders/raytracing/boxes.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4502,
						"regions":
						{
						},
						"selection":
						[
							[
								388,
								388
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "examples/compute/compute.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 918,
						"regions":
						{
						},
						"selection":
						[
							[
								500,
								500
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "examples/compute/compute.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2024,
						"regions":
						{
						},
						"selection":
						[
							[
								1665,
								1665
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/base/vk/device.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2087,
						"regions":
						{
						},
						"selection":
						[
							[
								1088,
								1088
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/base/vk/device.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5718,
						"regions":
						{
						},
						"selection":
						[
							[
								4362,
								4362
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 912.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/base/vk/pipeline.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10571,
						"regions":
						{
						},
						"selection":
						[
							[
								9840,
								9840
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3472.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/base/vk/pipeline.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5749,
						"regions":
						{
						},
						"selection":
						[
							[
								3638,
								3638
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1296.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/usr/include/vulkan/vulkan.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 908602,
						"regions":
						{
						},
						"selection":
						[
							[
								860672,
								860672
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 381592.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "src/base/vk/image.hpp",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1371,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "src/base/vk/utils.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1755,
						"regions":
						{
						},
						"selection":
						[
							[
								1396,
								1396
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 288.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "src/base/vk/utils.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4612,
						"regions":
						{
						},
						"selection":
						[
							[
								1225,
								1225
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 336.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clangcomplete":
	{
		"height": 90.0
	},
	"output.exec":
	{
		"height": 309.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 96.0
	},
	"pinned_build_system": "r267 (Linux)",
	"project": "r267.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"q",
				"devices/device_ispc/renderers/quad/quadrender.ispc"
			],
			[
				"quadre",
				"devices/device_ispc/renderers/quad/quadrender.ispc"
			],
			[
				"nmre",
				"embree-27SR/devices/device_singleray/renderers/nmrenderer.cpp"
			],
			[
				"decimate",
				"decimate/sources/models/Decimate.cpp"
			],
			[
				"gp.h",
				"GPU/sources/GPUPanaram.h"
			],
			[
				"",
				"GPU/sources/GPUPanaram.cpp"
			],
			[
				"b",
				"GPU/sources/cuda/backproj.cu"
			],
			[
				"gp",
				"GPU/sources/GPUOTrac.cpp"
			],
			[
				"cu",
				"GPU/sources/cuda/cudaUtils.cpp"
			],
			[
				"ba",
				"gpu_mask/backproj.cu"
			],
			[
				"g",
				"GPU/sources/GPUOTrac.cpp"
			],
			[
				"gpuo",
				"GPU/sources/GPUOTrac.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 193.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
